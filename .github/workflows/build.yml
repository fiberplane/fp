# This workflow will be triggered by a GitHub pull-request.
# It compiles the code to a release binary, create a Docker image containing
# the binary, and uploads the Docker image to our registry using the branch as
# the registry tag.
---
name: Build development image

on:
  pull_request:
    branches: ["*"]

env:
  CARGO_TERM_COLOR: always
  DISABLE_VERSION_CHECK: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: setup-git-credentials
        uses: fusion-engineering/setup-git-credentials@v2.0.6
        with:
          credentials: "https://fiberplanebot:${{ secrets.PRIVATE_GITHUB_TOKEN }}@github.com/"

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: add rust components
        run: |
          rustup component add clippy
          rustup component add rustfmt

      - name: Check format
        run: cargo fmt -- --check

      - name: Lint code
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features --release

      - name: Run tests
        run: cargo test --release

      - name: Build binary
        run: cargo build --release

      - name: Generate manifest
        run: target/release/fp version -o json > manifest.json

      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: fp
          path: target/release/fp
          if-no-files-found: error
          retention-days: 1

      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: manifest.json
          path: manifest.json
          if-no-files-found: error
          retention-days: 1
