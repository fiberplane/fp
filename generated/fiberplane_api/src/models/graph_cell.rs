/*
 * Fiberplane API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct GraphCell {
    #[serde(rename = "type")]
    pub _type: crate::models::CellType,
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "graphType")]
    pub graph_type: GraphType,
    #[serde(rename = "stackingType")]
    pub stacking_type: StackingType,
    #[serde(rename = "readOnly", skip_serializing_if = "Option::is_none")]
    pub read_only: Option<bool>,
    #[serde(rename = "sourceIds")]
    pub source_ids: Vec<String>,
    #[serde(rename = "timeRange", skip_serializing_if = "Option::is_none")]
    pub time_range: Option<Box<crate::models::TimeRange>>,
    #[serde(rename = "title")]
    pub title: String,
    #[serde(rename = "data", skip_serializing_if = "Option::is_none")]
    pub data: Option<::std::collections::HashMap<String, Vec<crate::models::Series>>>,
}

impl GraphCell {
    pub fn new(_type: crate::models::CellType, id: String, graph_type: GraphType, stacking_type: StackingType, source_ids: Vec<String>, title: String) -> GraphCell {
        GraphCell {
            _type,
            id,
            graph_type,
            stacking_type,
            read_only: None,
            source_ids,
            time_range: None,
            title,
            data: None,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum GraphType {
    #[serde(rename = "bar")]
    Bar,
    #[serde(rename = "line")]
    Line,
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum StackingType {
    #[serde(rename = "none")]
    None,
    #[serde(rename = "stacked")]
    Stacked,
    #[serde(rename = "percentage")]
    Percentage,
}

